/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/SpringBoard.framework/SpringBoard
 */

@interface SBBannerManager : NSObject <BNBannerSourceListenerDelegate, BNPosting, BNPostingPrivate, BNPresentingDelegate, SBAssistantObserver, SBButtonEventsHandler> {
    <BSInvalidatable> * _appsStatusBarAssertion;
    SBBannerAuthority * _bannerAuthority;
    BNBannerController * _bannerController;
    BNBannerSourceListener * _bannerSourceListener;
    UIWindow * _bannerWindow;
    NSMutableSet * _clientSuppressionAssertions;
    BNContentViewController * _contentViewController;
    NSMutableArray * _gesturePriorityAssertions;
    bool  _installedAsSystemGesture;
    UIPanGestureRecognizer * _panGesture;
    NSMapTable * _presentablesToGesturePriorityAssertions;
    <BSInvalidatable> * _presenterVisibilityGestureRecognizerPriorityAssertion;
    NSMutableSet * _statusBarAssertionReasons;
    NSHashTable * _suppressionAssertions;
    <BSInvalidatable> * _systemStatusBarAssertion;
    NSMutableArray * _windowLevelAssertions;
}

@property (nonatomic, readonly) UIWindow *bannerWindow;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (readonly) unsigned long long hash;
@property (nonatomic, readonly) <BNLayoutManaging> *layoutManager;
@property (getter=isPresentingBanner, nonatomic, readonly) bool presentingBanner;
@property (readonly) Class superclass;

+ (id)_defaultAuthorizedBundleIDs;

- (void).cxx_destruct;
- (id)_acquireGestureRecognizerPriorityAssertionWithPriority:(long long)arg1 reason:(id)arg2;
- (void)_acquirePresenterVisibilityGestureRecognizerPriorityAssertion;
- (id)_bannerSuspensionReasonForSuppressionAssertionReason:(id)arg1;
- (bool)_handleButtonEventWithTest:(id /* block */)arg1 handler:(id /* block */)arg2;
- (void)_hideStatusIfNecessaryForPresentable:(id)arg1;
- (void)_invalidatePresenterVisibilityGestureRecognizerPriorityAssertion;
- (bool)_isPresentableHUD:(id)arg1;
- (id)_layoutDescriptionWithBounds:(struct CGRect { struct CGPoint { double x_1_1_1; double x_1_1_2; } x1; struct CGSize { double x_2_1_1; double x_2_1_2; } x2; })arg1;
- (id)_newBannerWindow;
- (void)_revealStatusIfNecessaryForPresentable:(id)arg1;
- (bool)_shouldHideStatusBarForPresentable:(id)arg1;
- (id)_statusBarAssertionReasonForPresentable:(id)arg1;
- (void)_updateGesturePriority;
- (void)_updateWindowLevel;
- (id)acquireBannerSuppressionAssertionForReason:(id)arg1;
- (id)acquireGestureRecognizerPriorityAssertionForPresentable:(id)arg1 priority:(long long)arg2 reason:(id)arg3;
- (id)acquireWindowLevelAssertionWithPriority:(long long)arg1 windowLevel:(double)arg2 reason:(id)arg3;
- (void)assistantWillAppear:(id)arg1;
- (id)bannerSourceListener:(id)arg1 layoutDescriptionWithError:(id*)arg2;
- (void)bannerSourceListener:(id)arg1 presentationSize:(out struct CGSize { double x1; double x2; }*)arg2 containerSize:(out struct CGSize { double x1; double x2; }*)arg3 error:(id*)arg4;
- (bool)bannerSourceListener:(id)arg1 recommendsSuspending:(bool)arg2 forReason:(id)arg3 revokingCurrent:(bool)arg4 error:(id*)arg5;
- (bool)bannerSourceListener:(id)arg1 requestsPostingPresentable:(id)arg2 options:(unsigned long long)arg3 userInfo:(id)arg4 error:(id*)arg5;
- (bool)bannerSourceListener:(id)arg1 requestsRevokingAllPresentablesForRequesterWithIdentifier:(id)arg2 reason:(id)arg3 userInfo:(id)arg4 error:(id*)arg5;
- (bool)bannerSourceListener:(id)arg1 requestsRevokingPresentableWithRequestIdentifier:(id)arg2 requesterIdentifier:(id)arg3 animated:(bool)arg4 reason:(id)arg5 userInfo:(id)arg6 error:(id*)arg7;
- (id)bannerWindow;
- (void)dismissAllBannersAnimated:(bool)arg1 reason:(id)arg2;
- (bool)handleHeadsetButtonPress:(bool)arg1;
- (bool)handleHomeButtonDoublePress;
- (bool)handleHomeButtonLongPress;
- (bool)handleHomeButtonPress;
- (bool)handleLockButtonPress;
- (bool)handleVolumeDownButtonPress;
- (bool)handleVolumeUpButtonPress;
- (id)init;
- (bool)isPresentingBanner;
- (id)layoutManager;
- (id)panGestureRecognizerForPresenter:(id)arg1;
- (bool)postPresentable:(id)arg1 withOptions:(unsigned long long)arg2 userInfo:(id)arg3 error:(out id*)arg4;
- (struct CGPoint { double x1; double x2; })presenter:(id)arg1 gestureRecognizer:(id)arg2 locationForEvent:(id)arg3 inView:(id)arg4;
- (struct CGPoint { double x1; double x2; })presenter:(id)arg1 gestureRecognizer:(id)arg2 locationForTouch:(id)arg3 inView:(id)arg4;
- (struct CGPoint { double x1; double x2; })presenter:(id)arg1 gestureRecognizer:(id)arg2 translationInView:(id)arg3;
- (struct CGPoint { double x1; double x2; })presenter:(id)arg1 gestureRecognizer:(id)arg2 velocityInView:(id)arg3;
- (void)presenter:(id)arg1 willDismissPresentable:(id)arg2 withTransitionCoordinator:(id)arg3 userInfo:(id)arg4;
- (void)presenter:(id)arg1 willPresentPresentable:(id)arg2 withTransitionCoordinator:(id)arg3 userInfo:(id)arg4;
- (void)presenter:(id)arg1 willTransitionToSize:(struct CGSize { double x1; double x2; })arg2 withTransitionCoordinator:(id)arg3;
- (void)presenterRelinquishesVisibility:(id)arg1;
- (void)presenterRequestsVisibility:(id)arg1;
- (void)registerAuthority:(id)arg1 forRequesterIdentifier:(id)arg2;
- (bool)revokeAllPresentablesWithRequesterIdentifier:(id)arg1 reason:(id)arg2 options:(unsigned long long)arg3 userInfo:(id)arg4 error:(out id*)arg5;
- (bool)revokePresentableWithRequestIdentifier:(id)arg1 requesterIdentifier:(id)arg2 reason:(id)arg3 options:(unsigned long long)arg4 animated:(bool)arg5 userInfo:(id)arg6 error:(out id*)arg7;
- (bool)revokePresentableWithRequestIdentifier:(id)arg1 requesterIdentifier:(id)arg2 reason:(id)arg3 options:(unsigned long long)arg4 userInfo:(id)arg5 error:(out id*)arg6;
- (void)setSuspended:(bool)arg1 forReason:(id)arg2;
- (id)userInterfaceStyleTransitionAnimationSettingsForPresentable:(id)arg1 forTransitionToStyle:(long long)arg2;

@end
