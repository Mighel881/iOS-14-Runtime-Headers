/* Generated by RuntimeBrowser
   Image: /System/Library/PrivateFrameworks/WorkflowUI.framework/WorkflowUI
 */

@interface WFCompactHostingViewController : UIViewController <WFActionUserInterfaceListenerDelegate, WFCompactDialogViewControllerDelegate> {
    WFActionUserInterfaceListener * _actionInterfaceListener;
    UIView * _dimmingView;
    bool  _handlingRequest;
    bool  _hasViewAppeared;
    MTMaterialView * _materialView;
    WFDialogRequest * _pendingRequest;
    NSProgress * _progress;
    id  _progressSubscriber;
    id /* block */  _requestCompletionHandler;
    WFDialogAttribution * _runningAttribution;
    WFWorkflowRunningContext * _runningContext;
    bool  _screenIsLocked;
    WFCompactStatusViewController * _statusViewController;
    NSTimer * _statusViewTimer;
    WFCompactUnlockService * _unlockService;
}

@property (nonatomic, retain) WFActionUserInterfaceListener *actionInterfaceListener;
@property (readonly, copy) NSString *debugDescription;
@property (readonly, copy) NSString *description;
@property (nonatomic, retain) UIView *dimmingView;
@property (nonatomic) bool handlingRequest;
@property (nonatomic) bool hasViewAppeared;
@property (readonly) unsigned long long hash;
@property (nonatomic, retain) MTMaterialView *materialView;
@property (nonatomic, retain) WFDialogRequest *pendingRequest;
@property (nonatomic, retain) NSProgress *progress;
@property (nonatomic, retain) id progressSubscriber;
@property (nonatomic, copy) id /* block */ requestCompletionHandler;
@property (nonatomic, retain) WFDialogAttribution *runningAttribution;
@property (nonatomic, retain) WFWorkflowRunningContext *runningContext;
@property (nonatomic, readonly) bool screenIsLocked;
@property (nonatomic, retain) WFCompactStatusViewController *statusViewController;
@property (nonatomic, retain) NSTimer *statusViewTimer;
@property (readonly) Class superclass;
@property (nonatomic, readonly) WFCompactUnlockService *unlockService;

- (void).cxx_destruct;
- (bool)_canShowWhileLocked;
- (id)actionInterfaceListener;
- (void)actionUserInterfaceListener:(id)arg1 showViewInPlatter:(id)arg2 attribution:(id)arg3;
- (void)cancelAndDismiss;
- (void)clearStatusViewTimer;
- (void)dealloc;
- (void)dialogViewController:(id)arg1 didFinishWithResponse:(id)arg2 waitForFollowUpRequest:(bool)arg3;
- (id)dimmingView;
- (void)dismissPersistentChromeWithSuccess:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)dismissPlatterViewControllerAndUpdateChromeAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)dismissPlatterViewControllerIfNecessaryAnimated:(bool)arg1 completionHandler:(id /* block */)arg2;
- (void)dismissPresentedContentWithCompletionHandler:(id /* block */)arg1;
- (void)handlePendingRequest;
- (void)handleRequest:(id)arg1 completionHandler:(id /* block */)arg2;
- (void)handleTapGesture:(id)arg1;
- (bool)handlingRequest;
- (bool)hasViewAppeared;
- (id)initWithScreenLocked:(bool)arg1;
- (void)keyboardWillChange;
- (void)loadView;
- (id)materialView;
- (id)pendingRequest;
- (void)preparePersistentChromeWithContext:(id)arg1 attribution:(id)arg2;
- (void)presentChromeIfPossible;
- (void)presentStatusViewController;
- (id)progress;
- (id)progressSubscriber;
- (id /* block */)requestCompletionHandler;
- (id)runningAttribution;
- (id)runningContext;
- (void)scheduleStatusViewToAppear;
- (bool)screenIsLocked;
- (void)setActionInterfaceListener:(id)arg1;
- (void)setDimmingView:(id)arg1;
- (void)setHandlingRequest:(bool)arg1;
- (void)setHasViewAppeared:(bool)arg1;
- (void)setMaterialView:(id)arg1;
- (void)setPendingRequest:(id)arg1;
- (void)setProgress:(id)arg1;
- (void)setProgressSubscriber:(id)arg1;
- (void)setRequestCompletionHandler:(id /* block */)arg1;
- (void)setRunningAttribution:(id)arg1;
- (void)setRunningContext:(id)arg1;
- (void)setStatusViewController:(id)arg1;
- (void)setStatusViewTimer:(id)arg1;
- (id)statusViewController;
- (id)statusViewTimer;
- (id)unlockService;
- (void)updateChromeVisibilityWithCompletionHandler:(id /* block */)arg1;
- (void)viewDidAppear:(bool)arg1;

@end
